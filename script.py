# –°–æ–∑–¥–∞–º –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞

# 1. requirements.txt
requirements_content = """aiogram==3.7.0
aiohttp==3.9.0
aiofiles==23.2.0
yt-dlp==2024.8.6
vk-api==11.9.9
yandex-music==2.1.1
python-dotenv==1.0.0
ffmpeg-python==0.2.0
pathlib
asyncio
logging
"""

# 2. .env —Ñ–∞–π–ª —Å –ø—Ä–∏–º–µ—Ä–æ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
env_content = """# Telegram Bot Token (–ø–æ–ª—É—á–∏—Ç—å —É @BotFather)
BOT_TOKEN=your_telegram_bot_token_here

# VK Access Token (—Ç–æ–∫–µ–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ)
VK_ACCESS_TOKEN=your_vk_access_token_here

# Yandex Music Token (OAuth —Ç–æ–∫–µ–Ω –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∏)
YANDEX_TOKEN=your_yandex_music_token_here

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
MAX_FILE_SIZE_MB=50
MAX_DURATION_SECONDS=600
"""

# 3. Dockerfile –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏–∏
dockerfile_content = """FROM python:3.9-slim

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN apt-get update && apt-get install -y \\
    ffmpeg \\
    curl \\
    && rm -rf /var/lib/apt/lists/*

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
WORKDIR /app

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
COPY . .

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
RUN mkdir -p /tmp/music_bot

# –≠–∫—Å–ø–æ—Ä—Ç –ø–æ—Ä—Ç–∞ (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω –¥–ª—è healthcheck)
EXPOSE 8080

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
CMD ["python", "music_bot.py"]
"""

# 4. docker-compose.yml
docker_compose_content = """version: '3.8'

services:
  music-bot:
    build: .
    container_name: music-telegram-bot
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - VK_ACCESS_TOKEN=${VK_ACCESS_TOKEN}
      - YANDEX_TOKEN=${YANDEX_TOKEN}
    volumes:
      - ./temp:/tmp/music_bot
      - ./logs:/app/logs
    networks:
      - music-bot-network

networks:
  music-bot-network:
    driver: bridge
"""

# 5. Railway deployment —Ñ–∞–π–ª
railway_content = """{
  "build": {
    "builder": "DOCKERFILE"
  },
  "deploy": {
    "startCommand": "python music_bot.py",
    "restartPolicyType": "always",
    "replicas": 1
  }
}"""

# 6. Procfile for Heroku
procfile_content = """web: python music_bot.py"""

# 7. .gitignore
gitignore_content = """.env
.env.local
.env.production
*.log
logs/
temp/
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
*.so
.coverage
htmlcov/
.pytest_cache/
.vscode/
.idea/
*.mp3
*.m4a
*.webm
*.mp4
node_modules/
"""

# 8. README.md —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
readme_content = """# üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π Telegram –ë–æ—Ç

–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞, —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º—É–∑—ã–∫–∏ –≤ Telegram —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –∏ –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∏.

## ‚ú® –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- üîç **–ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏** –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Å YouTube
- üìÇ **–ü–ª–µ–π–ª–∏—Å—Ç—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ** - –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–∏–º –ø–ª–µ–π–ª–∏—Å—Ç–∞–º
- üìÇ **–ü–ª–µ–π–ª–∏—Å—Ç—ã –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∏** - –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–∏–º –ø–ª–µ–π–ª–∏—Å—Ç–∞–º  
- üéµ **–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–æ–≤** –≤ –≤—ã—Å–æ–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ (MP3 192kbps)
- üì± **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é** —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
- üîê **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã** - –±–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–µ–∑ –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### 1. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
```bash
git clone https://github.com/your-username/music-telegram-bot.git
cd music-telegram-bot
```

### 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
```bash
pip install -r requirements.txt
```

### 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
–°–∫–æ–ø–∏—Ä—É–π—Ç–µ `.env.example` –≤ `.env` –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ:
```bash
cp .env.example .env
```

–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ `.env`:
```env
BOT_TOKEN=your_telegram_bot_token
VK_ACCESS_TOKEN=your_vk_token
YANDEX_TOKEN=your_yandex_token
```

### 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ FFmpeg
**Ubuntu/Debian:**
```bash
sudo apt update && sudo apt install ffmpeg
```

**Windows:**
1. –°–∫–∞—á–∞–π—Ç–µ —Å https://ffmpeg.org/download.html
2. –î–æ–±–∞–≤—å—Ç–µ –≤ PATH

**macOS:**
```bash
brew install ffmpeg
```

### 5. –ó–∞–ø—É—Å–∫
```bash
python music_bot.py
```

## üîë –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤

### Telegram Bot Token
1. –ù–∞–π–¥–∏—Ç–µ @BotFather –≤ Telegram
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ `/newbot`
3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º
4. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω

### VK Access Token
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://vk.com/apps?act=manage
2. –°–æ–∑–¥–∞–π—Ç–µ Standalone –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
3. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ OAuth:
```
https://oauth.vk.com/authorize?client_id=CLIENT_ID&display=page&redirect_uri=https://oauth.vk.com/blank.html&scope=audio&response_type=token&v=5.131
```

### Yandex Music Token
1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://oauth.yandex.ru/
2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
3. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ –Ω–∞ –º—É–∑—ã–∫—É

## üê≥ Docker —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ

### –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
```bash
docker-compose up -d --build
```

### –¢–æ–ª—å–∫–æ —Å–±–æ—Ä–∫–∞
```bash
docker build -t music-bot .
```

### –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
```bash
docker run -d --name music-bot \\
  -e BOT_TOKEN=your_token \\
  -e VK_ACCESS_TOKEN=your_vk_token \\
  -e YANDEX_TOKEN=your_yandex_token \\
  music-bot
```

## üåê –î–µ–ø–ª–æ–π –Ω–∞ –æ–±–ª–∞—á–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã

### Railway.app
1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
2. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
3. Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–µ–ø–ª–æ–∏—Ç –ø—Ä–∏ push

### Render.com
1. –°–æ–∑–¥–∞–π—Ç–µ Web Service –∏–∑ GitHub
2. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –∑–∞–ø—É—Å–∫–∞: `python music_bot.py`

### Heroku
```bash
heroku create your-music-bot
heroku config:set BOT_TOKEN=your_token
heroku config:set VK_ACCESS_TOKEN=your_vk_token
heroku config:set YANDEX_TOKEN=your_yandex_token
git push heroku main
```

## üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
music-telegram-bot/
‚îú‚îÄ‚îÄ music_bot.py          # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –±–æ—Ç–∞
‚îú‚îÄ‚îÄ requirements.txt      # Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
‚îú‚îÄ‚îÄ .env.example         # –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
‚îú‚îÄ‚îÄ Dockerfile           # Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
‚îú‚îÄ‚îÄ docker-compose.yml   # Docker Compose
‚îú‚îÄ‚îÄ railway.json         # Railway –¥–µ–ø–ª–æ–π
‚îú‚îÄ‚îÄ Procfile            # Heroku –¥–µ–ø–ª–æ–π
‚îú‚îÄ‚îÄ README.md           # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
‚îî‚îÄ‚îÄ .gitignore          # Git –∏–≥–Ω–æ—Ä —Ñ–∞–π–ª
```

## ‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
| –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è | –û–ø–∏—Å–∞–Ω–∏–µ | –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è |
|------------|----------|--------------|
| `BOT_TOKEN` | –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ | ‚úÖ |
| `VK_ACCESS_TOKEN` | –¢–æ–∫–µ–Ω –í–ö–æ–Ω—Ç–∞–∫—Ç–µ API | ‚ùå |
| `YANDEX_TOKEN` | –¢–æ–∫–µ–Ω –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∏ | ‚ùå |
| `MAX_FILE_SIZE_MB` | –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (MB) | ‚ùå |
| `MAX_DURATION_SECONDS` | –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—Å–µ–∫) | ‚ùå |

### –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
- **–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:** –¥–æ 50MB (–ª–∏–º–∏—Ç Telegram)
- **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** –¥–æ 10 –º–∏–Ω—É—Ç
- **–ö–∞—á–µ—Å—Ç–≤–æ –∞—É–¥–∏–æ:** MP3 192kbps
- **–ò—Å—Ç–æ—á–Ω–∏–∫–∏:** YouTube, –í–ö–æ–Ω—Ç–∞–∫—Ç–µ, –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∞

## üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞

### –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
```bash
python -m pip install -r requirements.txt
python music_bot.py
```

### –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
–õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å —Å —É—Ä–æ–≤–Ω–µ–º INFO. –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏–∑–º–µ–Ω–∏—Ç–µ:
```python
logging.basicConfig(level=logging.DEBUG)
```

### –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
python -c "import music_bot; print('OK')"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ FFmpeg
ffmpeg -version
```

## üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

### –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
–ë–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:
- ‚úÖ VK service initialized  
- ‚úÖ Yandex Music service initialized

### –õ–æ–≥–∏ –æ—à–∏–±–æ–∫
```bash
# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Docker
docker logs music-bot -f

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Railway
railway logs

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ Heroku
heroku logs -t -a your-app-name
```

## ü§ù –ü–æ–¥–¥–µ—Ä–∂–∫–∞

### –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã

**Q: –ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç**  
A: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å `BOT_TOKEN` –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞

**Q: –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –í–ö**  
A: –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ `VK_ACCESS_TOKEN` –∏ –ø—Ä–∞–≤–∞—Ö –¥–æ—Å—Ç—É–ø–∞

**Q: –û—à–∏–±–∫–∞ FFmpeg**  
A: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FFmpeg –≤ —Å–∏—Å—Ç–µ–º—É –∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

**Q: –§–∞–π–ª—ã —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–µ**  
A: –£–º–µ–Ω—å—à–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∞—É–¥–∏–æ –∏–ª–∏ –ª–∏–º–∏—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

### –ö–æ–Ω—Ç–∞–∫—Ç—ã
- GitHub Issues: [–°–æ–∑–¥–∞—Ç—å issue](https://github.com/your-username/music-telegram-bot/issues)
- Telegram: @your_username

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è

MIT License - —Å–º. —Ñ–∞–π–ª [LICENSE](LICENSE)

## ‚ö†Ô∏è –î–∏—Å–∫–ª–µ–π–º–µ—Ä

–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π. –°–æ–±–ª—é–¥–∞–π—Ç–µ –∞–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞ –∏ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.
"""

# 9. GitHub Actions –¥–ª—è CI/CD
github_actions_content = """name: Deploy Music Bot

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test imports
      run: |
        python -c "
        import asyncio
        import yt_dlp
        import vk_api
        import yandex_music
        from aiogram import Bot, Dispatcher
        print('All imports successful')
        "
    
    - name: Check FFmpeg
      run: ffmpeg -version
  
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Railway
      run: |
        echo "Deploying to Railway..."
        # Railway –¥–µ–ø–ª–æ–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ push
"""

# 10. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
files_to_create = {
    'requirements.txt': requirements_content,
    '.env.example': env_content,
    'Dockerfile': dockerfile_content,
    'docker-compose.yml': docker_compose_content,
    'railway.json': railway_content,
    'Procfile': procfile_content,
    '.gitignore': gitignore_content,
    'README.md': readme_content,
    '.github/workflows/deploy.yml': github_actions_content
}

# –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
for filename, content in files_to_create.items():
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if '/' in filename:
        directory = '/'.join(filename.split('/')[:-1])
        import os
        os.makedirs(directory, exist_ok=True)
    
    with open(filename, 'w', encoding='utf-8') as f:
        f.write(content.strip())

print("‚úÖ –°–æ–∑–¥–∞–Ω—ã –≤—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞:")
for filename in files_to_create.keys():
    print(f"  üìÑ {filename}")

print("\nüöÄ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≥–æ—Ç–æ–≤–∞!")
print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
print("1. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –≤ music_bot.py")
print("2. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å .env.example –≤ .env")
print("3. –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ")
print("4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
print("5. –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞: python music_bot.py")
print("\nüåê –î–ª—è –¥–µ–ø–ª–æ—è:")
print("- Railway: push –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
print("- Docker: docker-compose up -d --build")
print("- Heroku: —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ README.md")